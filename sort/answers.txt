sort1 uses: TBubble Sort

How do you know?:
The overall running time is slower than sort2, but when the list is sorted,
it's still faster than sort3. It looks like in the best case scenario
it runs on Omega(n), and worst case scenario it's O(n^2)
sort2 uses: Merge Sort

How do you know?:
The running time is relatively the same with all the tests,
and it's still the fastest out of the three of them.
It looks like it runs on O(n log n) time complexity.
sort3 uses: Selection Sort

How do you know?: 
This is the slowest time, even when the list is sorted. So,
the worst case and the best case scenarios are the same, meanning
it could have a time complexity of Theta(n^2).